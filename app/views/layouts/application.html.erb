<%=  %>
<!DOCTYPE html>
<html>
  <head>
    <title>RailsLongestWordGame</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body>
    <%= yield %>
  </body>
</html>


-------------------------------------------------------------------
new.html.erb
<div class="container">
  <h1>New game</h1>

  <ul class="letters">
    <% @letters.each do |letter| %>
      <li><%= letter %></li>
    <% end %>
  </ul>

  <p class="form-prefix">What is the longest word you can find?</p>

  <form action="/score" method="POST" data-turbo="false">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <%= hidden_field_tag :letters, @letters %>
    <div class="input-group">
      <input type="text" name="word" class="form-control">
      <input type="submit" value="Play" class="btn btn-primary">
    </div>
  </form>
</div>

-------------------------------------------------------------------
score.html.erb
<h1>Result</h1>

<% if @included %>
  <% if @english_word %>
    <p><strong>Congratulations!</strong> <%= @word %> is a valid English word!</p>
  <% else %>
    <p>Sorry but <strong><%= @word %></strong> does not seem to be a valid English word...</p>
  <% end %>
<% else %>
  <p>Sorry but <strong><%= @word %></strong> can't be built out of <%= @letters.join(", ") %></p>
<% end %>
<%= link_to "Play again", new_path %>

----------------------------------------------------------------------
games_controller.rb

require "open-uri"

class GamesController < ApplicationController
  VOWELS = %w(A E I O U Y)

  def new
    @letters = Array.new(5) { VOWELS.sample }
    @letters += Array.new(5) { (('A'..'Z').to_a - VOWELS).sample }
    @letters.shuffle!
  end

  def score
    @letters = params[:letters].split
    @word = (params[:word] || "").upcase
    @included = included?(@word, @letters)
    @english_word = english_word?(@word)
  end

  private

  def included?(word, letters)
    word.chars.all? { |letter| word.count(letter) <= letters.count(letter) }
  end

  def english_word?(word)
    response = URI.open("https://wagon-dictionary.herokuapp.com/#{word}")
    json = JSON.parse(response.read)
    json['found']
  end
end
